var searchIndex={};
searchIndex["advanca_core"] = {"doc":"","i":[[3,"User","advanca_core","The public information about a user",null,null],[12,"account_id","","User account on chain",0,null],[12,"public_key","","User public key for encryption",0,null],[3,"Enclave","","The public information about an Enclave",null,null],[12,"account_id","","Enclave account on chain",1,null],[12,"public_key","","Enclave public key for encryption",1,null],[12,"attestation","","Enclave attestation information which certifies all the…",1,null],[3,"Worker","","The public information about a worker and its enclave",null,null],[12,"account_id","","Worker account on chain",2,null],[12,"enclave","","Enclave that the worker is running",2,null],[3,"TaskSpec","","The task specification. //TODO: more details",null,null],[12,"pod_spec","","The specification of the pod, which is the same concept in…",3,null],[12,"volume_spec","","The specification of the storage volume",3,null],[12,"privacy","","The privacy level",3,null],[3,"Task","","Task information",null,null],[12,"task_id","","A unversial task ID that is unique for every submission by…",4,null],[12,"status","","The current task status",4,null],[12,"owner","","The user who submitted the task",4,null],[12,"lease","","The owner-determined task duration. Default to 0 for…",4,null],[12,"task_spec","","The detailed specification of a task",4,null],[12,"worker","","The worker who accepted the task. It may be none at the…",4,null],[12,"worker_url","","The worker's service url saved in ciphertext encrypted by…",4,null],[3,"Module","","The module declaration.",null,null],[4,"TaskStatus","","The status of a task managed on chain",null,null],[13,"Unscheduled","","The task is already submitted but not taken by any workers",5,null],[13,"Scheduled","","The task is taken by a worker",5,null],[4,"Privacy","","The possible privacy levels",null,null],[13,"None","","Public",6,null],[13,"Encryption","","Only encryption used",6,null],[13,"SqrtOram","","Encryption and Square-Root ORAM",6,null],[13,"PathOram","","Encryption and Path ORAM",6,null],[13,"OblivP2p","","Encryption and Oblivous P2P",6,null],[4,"Error","","",null,null],[13,"AlreadyRegistered","","",7,null],[13,"NotFound","","",7,null],[4,"Call","","Dispatchable calls.",null,null],[13,"register_worker","","",8,null],[13,"deregister_worker","","",8,null],[13,"register_user","","",8,null],[13,"deregister_user","","",8,null],[13,"submit_task","","",8,null],[13,"update_task","","Updates a task",8,null],[13,"accept_task","","Worker accepts a task",8,null],[13,"abort_task","","",8,null],[13,"complete_task","","",8,null],[13,"progress_task","","",8,null],[4,"RawEvent","","Events for this module.",null,null],[13,"UserAdded","","",9,null],[13,"UserRemoved","","",9,null],[13,"TaskSubmitted","","",9,null],[13,"TaskUpdated","","",9,null],[13,"TaskAccepted","","",9,null],[13,"TaskCompleted","","",9,null],[13,"TaskAborted","","",9,null],[13,"WorkerAdded","","",9,null],[13,"WorkerRemoved","","",9,null],[6,"BalanceOf","","",null,null],[6,"TaskId","","",null,null],[6,"Index","","",null,null],[6,"Duration","","Duration of the task. 0 means unlimited.",null,null],[6,"Ciphertext","","The encrypted bytes",null,null],[6,"Event","","[`RawEvent`] specialized for the configuration [`Trait`]",null,null],[8,"Trait","","The module's configuration trait.",null,null],[16,"Event","","The overarching event type.",10,null],[16,"Currency","","The currency to be handled in this module",10,null],[11,"get_user","","Registered users",11,[[["encodelike"]],["user"]]],[11,"get_worker","","Registered workers",11,[[["encodelike"]],["worker"]]],[11,"get_task","","Saved tasks",11,[[["encodelike",["taskid"]],["taskid"]],[["task",["taskid","duration","taskspec","taskstatus","ciphertext"]],["taskstatus"],["taskid"],["duration"],["taskspec",["privacy"]],["ciphertext"]]]],[11,"unscheduled_tasks","","Unscheduled tasks",11,[[],[["taskid"],["vec",["taskid"]]]]],[11,"register_worker","","",11,[[["balanceof"],["enclave"]],["dispatchresult"]]],[11,"deregister_worker","","",11,[[],["dispatchresult"]]],[11,"register_user","","",11,[[["balanceof"],["vec",["u8"]],["u8"]],["dispatchresult"]]],[11,"deregister_user","","",11,[[],["dispatchresult"]]],[11,"submit_task","","",11,[[["duration"],["taskspec",["privacy"]],["privacy"]],["dispatchresult"]]],[11,"update_task","","Updates a task",11,[[["taskid"],["taskspec",["privacy"]],["privacy"]],["dispatchresult"]]],[11,"accept_task","","Worker accepts a task",11,[[["ciphertext"],["taskid"]],["dispatchresult"]]],[11,"abort_task","","",11,[[["taskid"]],["dispatchresult"]]],[11,"complete_task","","",11,[[["taskid"]],["dispatchresult"]]],[11,"progress_task","","",11,[[],["dispatchresult"]]],[11,"metadata","","",9,[[]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"into","","",0,[[],["u"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"try_into","","",0,[[],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"type_id","","",0,[[["self"]],["typeid"]]],[11,"decode","","",0,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",0,[[["self"]],["usize"]]],[11,"using_encoded","","",0,[[["self"],["f"]],["r"]]],[11,"encode","","",0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",0,[[["w"],["self"]]]],[11,"blake2_128","","",0,[[["self"]]]],[11,"blake2_256","","",0,[[["self"]]]],[11,"blake2_128_concat","","",0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",0,[[["self"]]]],[11,"twox_256","","",0,[[["self"]]]],[11,"twox_64_concat","","",0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",0,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",0,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",0,[[["self"]],["bool"]]],[11,"clear","","",0,[[],["t"]]],[11,"unchecked_into","","",0,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",0,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",0,[[],["t"]]],[11,"vzip","","",0,[[],["v"]]],[11,"clear","","",0,[[["self"]]]],[11,"initialize","","",0,[[]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"into","","",1,[[],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,[[["self"],["t"]]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"try_into","","",1,[[],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"type_id","","",1,[[["self"]],["typeid"]]],[11,"decode","","",1,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",1,[[["self"]],["usize"]]],[11,"using_encoded","","",1,[[["self"],["f"]],["r"]]],[11,"encode","","",1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",1,[[["w"],["self"]]]],[11,"blake2_128","","",1,[[["self"]]]],[11,"blake2_256","","",1,[[["self"]]]],[11,"blake2_128_concat","","",1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",1,[[["self"]]]],[11,"twox_256","","",1,[[["self"]]]],[11,"twox_64_concat","","",1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",1,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",1,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",1,[[["self"]],["bool"]]],[11,"clear","","",1,[[],["t"]]],[11,"unchecked_into","","",1,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",1,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",1,[[],["t"]]],[11,"vzip","","",1,[[],["v"]]],[11,"clear","","",1,[[["self"]]]],[11,"initialize","","",1,[[]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"into","","",2,[[],["u"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"try_into","","",2,[[],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"type_id","","",2,[[["self"]],["typeid"]]],[11,"decode","","",2,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",2,[[["self"]],["usize"]]],[11,"using_encoded","","",2,[[["self"],["f"]],["r"]]],[11,"encode","","",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",2,[[["w"],["self"]]]],[11,"blake2_128","","",2,[[["self"]]]],[11,"blake2_256","","",2,[[["self"]]]],[11,"blake2_128_concat","","",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",2,[[["self"]]]],[11,"twox_256","","",2,[[["self"]]]],[11,"twox_64_concat","","",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",2,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",2,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",2,[[["self"]],["bool"]]],[11,"clear","","",2,[[],["t"]]],[11,"unchecked_into","","",2,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",2,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",2,[[],["t"]]],[11,"vzip","","",2,[[],["v"]]],[11,"clear","","",2,[[["self"]]]],[11,"initialize","","",2,[[]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"into","","",3,[[],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,[[["self"],["t"]]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"try_into","","",3,[[],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"type_id","","",3,[[["self"]],["typeid"]]],[11,"decode","","",3,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",3,[[["self"]],["usize"]]],[11,"using_encoded","","",3,[[["self"],["f"]],["r"]]],[11,"encode","","",3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",3,[[["w"],["self"]]]],[11,"blake2_128","","",3,[[["self"]]]],[11,"blake2_256","","",3,[[["self"]]]],[11,"blake2_128_concat","","",3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",3,[[["self"]]]],[11,"twox_256","","",3,[[["self"]]]],[11,"twox_64_concat","","",3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",3,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",3,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",3,[[["self"]],["bool"]]],[11,"clear","","",3,[[],["t"]]],[11,"unchecked_into","","",3,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",3,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",3,[[],["t"]]],[11,"vzip","","",3,[[],["v"]]],[11,"clear","","",3,[[["self"]]]],[11,"initialize","","",3,[[]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"into","","",4,[[],["u"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,[[["self"],["t"]]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"try_into","","",4,[[],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"type_id","","",4,[[["self"]],["typeid"]]],[11,"decode","","",4,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",4,[[["self"]],["usize"]]],[11,"using_encoded","","",4,[[["self"],["f"]],["r"]]],[11,"encode","","",4,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",4,[[["w"],["self"]]]],[11,"blake2_128","","",4,[[["self"]]]],[11,"blake2_256","","",4,[[["self"]]]],[11,"blake2_128_concat","","",4,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",4,[[["self"]]]],[11,"twox_256","","",4,[[["self"]]]],[11,"twox_64_concat","","",4,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",4,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",4,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",4,[[["self"]],["bool"]]],[11,"clear","","",4,[[],["t"]]],[11,"unchecked_into","","",4,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",4,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",4,[[],["t"]]],[11,"vzip","","",4,[[],["v"]]],[11,"clear","","",4,[[["self"]]]],[11,"initialize","","",4,[[]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"into","","",11,[[],["u"]]],[11,"to_owned","","",11,[[["self"]],["t"]]],[11,"clone_into","","",11,[[["self"],["t"]]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"try_into","","",11,[[],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"type_id","","",11,[[["self"]],["typeid"]]],[11,"unchecked_into","","",11,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",11,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",11,[[],["t"]]],[11,"vzip","","",11,[[],["v"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"into","","",5,[[],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,[[["self"],["t"]]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"try_into","","",5,[[],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"type_id","","",5,[[["self"]],["typeid"]]],[11,"decode","","",5,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",5,[[["self"]],["usize"]]],[11,"using_encoded","","",5,[[["self"],["f"]],["r"]]],[11,"encode","","",5,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",5,[[["w"],["self"]]]],[11,"blake2_128","","",5,[[["self"]]]],[11,"blake2_256","","",5,[[["self"]]]],[11,"blake2_128_concat","","",5,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",5,[[["self"]]]],[11,"twox_256","","",5,[[["self"]]]],[11,"twox_64_concat","","",5,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",5,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",5,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",5,[[["self"]],["bool"]]],[11,"clear","","",5,[[],["t"]]],[11,"unchecked_into","","",5,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",5,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",5,[[],["t"]]],[11,"vzip","","",5,[[],["v"]]],[11,"clear","","",5,[[["self"]]]],[11,"initialize","","",5,[[]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"into","","",6,[[],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,[[["self"],["t"]]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"try_into","","",6,[[],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"type_id","","",6,[[["self"]],["typeid"]]],[11,"decode","","",6,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",6,[[["self"]],["usize"]]],[11,"using_encoded","","",6,[[["self"],["f"]],["r"]]],[11,"encode","","",6,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",6,[[["w"],["self"]]]],[11,"blake2_128","","",6,[[["self"]]]],[11,"blake2_256","","",6,[[["self"]]]],[11,"blake2_128_concat","","",6,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",6,[[["self"]]]],[11,"twox_256","","",6,[[["self"]]]],[11,"twox_64_concat","","",6,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",6,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",6,[[],[["result",["error"]],["error"]]]],[11,"is_clear","","",6,[[["self"]],["bool"]]],[11,"clear","","",6,[[],["t"]]],[11,"unchecked_into","","",6,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",6,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",6,[[],["t"]]],[11,"vzip","","",6,[[],["v"]]],[11,"clear","","",6,[[["self"]]]],[11,"initialize","","",6,[[]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"into","","",7,[[],["u"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"try_into","","",7,[[],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"type_id","","",7,[[["self"]],["typeid"]]],[11,"unchecked_into","","",7,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",7,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",7,[[],["t"]]],[11,"vzip","","",7,[[],["v"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"into","","",8,[[],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,[[["self"],["t"]]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"try_into","","",8,[[],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"type_id","","",8,[[["self"]],["typeid"]]],[11,"decode","","",8,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",8,[[["self"]],["usize"]]],[11,"using_encoded","","",8,[[["self"],["f"]],["r"]]],[11,"encode","","",8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",8,[[["w"],["self"]]]],[11,"blake2_128","","",8,[[["self"]]]],[11,"blake2_256","","",8,[[["self"]]]],[11,"blake2_128_concat","","",8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",8,[[["self"]]]],[11,"twox_256","","",8,[[["self"]]]],[11,"twox_64_concat","","",8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",8,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",8,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",8,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",8,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",8,[[],["t"]]],[11,"vzip","","",8,[[],["v"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"into","","",9,[[],["u"]]],[11,"to_owned","","",9,[[["self"]],["t"]]],[11,"clone_into","","",9,[[["self"],["t"]]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"try_into","","",9,[[],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"type_id","","",9,[[["self"]],["typeid"]]],[11,"decode","","",9,[[["i"]],[["error"],["result",["error"]]]]],[11,"size_hint","","",9,[[["self"]],["usize"]]],[11,"using_encoded","","",9,[[["self"],["f"]],["r"]]],[11,"encode","","",9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"encode_to","","",9,[[["w"],["self"]]]],[11,"blake2_128","","",9,[[["self"]]]],[11,"blake2_256","","",9,[[["self"]]]],[11,"blake2_128_concat","","",9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"twox_128","","",9,[[["self"]]]],[11,"twox_256","","",9,[[["self"]]]],[11,"twox_64_concat","","",9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"to_keyed_vec","","",9,[[["self"]],[["u8"],["vec",["u8"]]]]],[11,"decode_all","","",9,[[],[["result",["error"]],["error"]]]],[11,"unchecked_into","","",9,[[],["t"]]],[11,"from_ref","","Get a reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"from_mut","","Get a mutable reference to the inner from the outer.",9,[[["outer"]],["t"]]],[11,"unique_saturated_into","","",9,[[],["t"]]],[11,"vzip","","",9,[[],["v"]]],[11,"clone","","",1,[[["self"]],["enclave"]]],[11,"clone","","",5,[[["self"]],["taskstatus"]]],[11,"clone","","",6,[[["self"]],["privacy"]]],[11,"clone","","",3,[[["self"]],["taskspec"]]],[11,"clone","","",4,[[["self"]],["task"]]],[11,"clone","","",11,[[["self"]],["module"]]],[11,"clone","","",8,[[["self"]],["self"]]],[11,"clone","","",9,[[["self"]],["rawevent"]]],[11,"default","","",0,[[],["user"]]],[11,"default","","",1,[[],["enclave"]]],[11,"default","","",2,[[],["worker"]]],[11,"default","","Return `TaskStatus::Unscheduled`",5,[[],["self"]]],[11,"default","","Return `Privacy::None`",6,[[],["self"]]],[11,"default","","",3,[[],["taskspec"]]],[11,"default","","",4,[[],["task"]]],[11,"eq","","",0,[[["self"],["user"]],["bool"]]],[11,"ne","","",0,[[["self"],["user"]],["bool"]]],[11,"eq","","",1,[[["self"],["enclave"]],["bool"]]],[11,"ne","","",1,[[["self"],["enclave"]],["bool"]]],[11,"eq","","",2,[[["worker"],["self"]],["bool"]]],[11,"ne","","",2,[[["worker"],["self"]],["bool"]]],[11,"eq","","",5,[[["self"],["taskstatus"]],["bool"]]],[11,"eq","","",6,[[["privacy"],["self"]],["bool"]]],[11,"eq","","",3,[[["self"],["taskspec"]],["bool"]]],[11,"ne","","",3,[[["self"],["taskspec"]],["bool"]]],[11,"eq","","",4,[[["self"],["task"]],["bool"]]],[11,"ne","","",4,[[["self"],["task"]],["bool"]]],[11,"eq","","",11,[[["module"],["self"]],["bool"]]],[11,"ne","","",11,[[["module"],["self"]],["bool"]]],[11,"eq","","",8,[[["self"]],["bool"]]],[11,"eq","","",9,[[["self"],["rawevent"]],["bool"]]],[11,"ne","","",9,[[["self"],["rawevent"]],["bool"]]],[11,"fmt","","",0,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",1,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",2,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",5,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",6,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",3,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",4,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",7,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",11,[[["formatter"],["self"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],[["result",["error"]],["error"]]]],[11,"fmt","","",9,[[["formatter"],["self"]],["result"]]],[11,"decode","","",0,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",1,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",2,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",5,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",6,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",3,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",4,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",8,[[["decin"]],[["error"],["result",["error"]]]]],[11,"decode","","",9,[[["decin"]],[["error"],["result",["error"]]]]],[11,"encode_to","","",0,[[["self"],["encout"]]]],[11,"encode_to","","",1,[[["self"],["encout"]]]],[11,"encode_to","","",2,[[["self"],["encout"]]]],[11,"encode_to","","",5,[[["self"],["encout"]]]],[11,"encode_to","","",6,[[["self"],["encout"]]]],[11,"encode_to","","",3,[[["self"],["encout"]]]],[11,"encode_to","","",4,[[["self"],["encout"]]]],[11,"encode_to","","",8,[[["self"],["encout"]]]],[11,"encode_to","","",9,[[["self"],["encout"]]]],[11,"metadata","","",7,[[]]],[11,"metadata","","",11,[[]]],[11,"get_dispatch_info","","",8,[[["self"]],["dispatchinfo"]]],[11,"dispatch","","",8,[[],["dispatchresult"]]],[11,"get_call_name","","",8,[[["self"]],["str"]]],[11,"get_call_names","","",8,[[]]]],"p":[[3,"User"],[3,"Enclave"],[3,"Worker"],[3,"TaskSpec"],[3,"Task"],[4,"TaskStatus"],[4,"Privacy"],[4,"Error"],[4,"Call"],[4,"RawEvent"],[8,"Trait"],[3,"Module"]]};
addSearchOptions(searchIndex);initSearch(searchIndex);